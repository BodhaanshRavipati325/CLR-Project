[{"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/GridData.js":"1","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Item.js":"2","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/ItemData.js":"3","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Titles.js":"4","/Users/bodhaanshravipati/clr-project/my-app/src/app/layout.js":"5","/Users/bodhaanshravipati/clr-project/my-app/src/app/page.js":"6","/Users/bodhaanshravipati/clr-project/my-app/src/app/firebase.js":"7","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/ProgressBar.js":"8","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Cell.js":"9","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Header.js":"10","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Relationship.js":"11","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Table.js":"12","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Text.js":"13","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/colors.js":"14","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/page.js":"15","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/utils.js":"16","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/UserButton.js":"17","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/page.js":"18","/Users/bodhaanshravipati/clr-project/my-app/src/middleware.ts":"19","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/SignInPage.js":"20","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/UserData.js":"21","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/ColumnBox.js":"22","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/DescriptionBox.js":"23","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/EducationExperiences.js":"24","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/LeadershipExperiences.js":"25","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/Profile.js":"26","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/RowBox.js":"27","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/WorkExperiences.js":"28","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/educationExperience/page.js":"29","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/leadershipExperience/page.js":"30","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/workExperience/page.js":"31","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/DialogField.js":"32","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/UploadButton.js":"33","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/GridTable.js":"34","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/artifactHub/page.js":"35"},{"size":2075,"mtime":1691018425279,"results":"36","hashOfConfig":"37"},{"size":335,"mtime":1691016746364,"results":"38","hashOfConfig":"37"},{"size":782,"mtime":1691018254544,"results":"39","hashOfConfig":"37"},{"size":669,"mtime":1691615077122,"results":"40","hashOfConfig":"37"},{"size":520,"mtime":1691639665807,"results":"41","hashOfConfig":"37"},{"size":264,"mtime":1691683682409,"results":"42","hashOfConfig":"37"},{"size":2328,"mtime":1691532150617,"results":"43","hashOfConfig":"37"},{"size":1979,"mtime":1690744362937,"results":"44","hashOfConfig":"37"},{"size":5551,"mtime":1691019032917,"results":"45","hashOfConfig":"37"},{"size":8032,"mtime":1691019150205,"results":"46","hashOfConfig":"37"},{"size":451,"mtime":1691017071273,"results":"47","hashOfConfig":"37"},{"size":2715,"mtime":1691019199460,"results":"48","hashOfConfig":"37"},{"size":486,"mtime":1691017075166,"results":"49","hashOfConfig":"37"},{"size":315,"mtime":1691017054410,"results":"50","hashOfConfig":"37"},{"size":11924,"mtime":1691018121829,"results":"51","hashOfConfig":"37"},{"size":197,"mtime":1691017079079,"results":"52","hashOfConfig":"37"},{"size":328,"mtime":1690852463855,"results":"53","hashOfConfig":"37"},{"size":14759,"mtime":1691683682413,"results":"54","hashOfConfig":"37"},{"size":1024,"mtime":1690756668518,"results":"55","hashOfConfig":"37"},{"size":336,"mtime":1691018799033,"results":"56","hashOfConfig":"37"},{"size":2900,"mtime":1691683682412,"results":"57","hashOfConfig":"37"},{"size":428,"mtime":1691609796872,"results":"58","hashOfConfig":"37"},{"size":819,"mtime":1691683682410,"results":"59","hashOfConfig":"37"},{"size":794,"mtime":1691683682411,"results":"60","hashOfConfig":"37"},{"size":794,"mtime":1691683682412,"results":"61","hashOfConfig":"37"},{"size":103,"mtime":1690860638708,"results":"62","hashOfConfig":"37"},{"size":399,"mtime":1691016835594,"results":"63","hashOfConfig":"37"},{"size":784,"mtime":1691683682413,"results":"64","hashOfConfig":"37"},{"size":2546,"mtime":1691523094937,"results":"65","hashOfConfig":"37"},{"size":1977,"mtime":1691523094937,"results":"66","hashOfConfig":"37"},{"size":1860,"mtime":1691523094938,"results":"67","hashOfConfig":"37"},{"size":9893,"mtime":1691683682410,"results":"68","hashOfConfig":"37"},{"size":900,"mtime":1691689528556,"results":"69","hashOfConfig":"37"},{"size":7154,"mtime":1691690594430,"results":"70","hashOfConfig":"37"},{"size":142,"mtime":1691609783060,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m0x51d",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/GridData.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Item.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/ItemData.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Titles.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/layout.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/page.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/firebase.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/ProgressBar.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Cell.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Header.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Relationship.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Table.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/Text.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/colors.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/page.js",["182"],[],"\"use client\";\n\nimport React, { useEffect, useReducer } from \"react\";\nimport \"./style.css\";\nimport Table from \"./Table\";\nimport { randomColor, shortId } from \"./utils\";\nimport { grey } from \"./colors\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"add_option_to_column\":\n            const optionIndex = state.columns.findIndex(\n                (column) => column.id === action.columnId\n            );\n            return {\n                ...state,\n                skipReset: true,\n                columns: [\n                    ...state.columns.slice(0, optionIndex),\n                    {\n                        ...state.columns[optionIndex],\n                        options: [\n                            ...state.columns[optionIndex].options,\n                            { label: action.option, backgroundColor: action.backgroundColor },\n                        ],\n                    },\n                    ...state.columns.slice(optionIndex + 1, state.columns.length),\n                ],\n            };\n        case \"add_row\":\n            return {\n                ...state,\n                skipReset: true,\n                data: [...state.data, {}],\n            };\n        case \"update_column_type\":\n            const typeIndex = state.columns.findIndex(\n                (column) => column.id === action.columnId\n            );\n            switch (action.dataType) {\n                case \"number\":\n                    if (state.columns[typeIndex].dataType === \"number\") {\n                        return state;\n                    } else {\n                        return {\n                            ...state,\n                            columns: [\n                                ...state.columns.slice(0, typeIndex),\n                                { ...state.columns[typeIndex], dataType: action.dataType },\n                                ...state.columns.slice(typeIndex + 1, state.columns.length),\n                            ],\n                            data: state.data.map((row) => ({\n                                ...row,\n                                [action.columnId]: isNaN(row[action.columnId])\n                                    ? \"\"\n                                    : Number.parseInt(row[action.columnId]),\n                            })),\n                        };\n                    }\n                case \"select\":\n                    if (state.columns[typeIndex].dataType === \"select\") {\n                        return {\n                            ...state,\n                            columns: [\n                                ...state.columns.slice(0, typeIndex),\n                                { ...state.columns[typeIndex], dataType: action.dataType },\n                                ...state.columns.slice(typeIndex + 1, state.columns.length),\n                            ],\n                            skipReset: true,\n                        };\n                    } else {\n                        let options = [];\n                        state.data.forEach((row) => {\n                            if (row[action.columnId]) {\n                                options.push({\n                                    label: row[action.columnId],\n                                    backgroundColor: randomColor(),\n                                });\n                            }\n                        });\n                        return {\n                            ...state,\n                            columns: [\n                                ...state.columns.slice(0, typeIndex),\n                                {\n                                    ...state.columns[typeIndex],\n                                    dataType: action.dataType,\n                                    options: [...state.columns[typeIndex].options, ...options],\n                                },\n                                ...state.columns.slice(typeIndex + 1, state.columns.length),\n                            ],\n                            skipReset: true,\n                        };\n                    }\n                case \"text\":\n                    if (state.columns[typeIndex].dataType === \"text\") {\n                        return state;\n                    } else if (state.columns[typeIndex].dataType === \"select\") {\n                        return {\n                            ...state,\n                            skipReset: true,\n                            columns: [\n                                ...state.columns.slice(0, typeIndex),\n                                { ...state.columns[typeIndex], dataType: action.dataType },\n                                ...state.columns.slice(typeIndex + 1, state.columns.length),\n                            ],\n                        };\n                    } else {\n                        return {\n                            ...state,\n                            skipReset: true,\n                            columns: [\n                                ...state.columns.slice(0, typeIndex),\n                                { ...state.columns[typeIndex], dataType: action.dataType },\n                                ...state.columns.slice(typeIndex + 1, state.columns.length),\n                            ],\n                            data: state.data.map((row) => ({\n                                ...row,\n                                [action.columnId]: row[action.columnId] + \"\",\n                            })),\n                        };\n                    }\n                default:\n                    return state;\n            }\n        case \"update_column_header\":\n            const index = state.columns.findIndex(\n                (column) => column.id === action.columnId\n            );\n            return {\n                ...state,\n                skipReset: true,\n                columns: [\n                    ...state.columns.slice(0, index),\n                    { ...state.columns[index], label: action.label },\n                    ...state.columns.slice(index + 1, state.columns.length),\n                ],\n            };\n        case \"update_cell\":\n            return {\n                ...state,\n                skipReset: true,\n                data: state.data.map((row, index) => {\n                    if (index === action.rowIndex) {\n                        return {\n                            ...state.data[action.rowIndex],\n                            [action.columnId]: action.value,\n                        };\n                    }\n                    return row;\n                }),\n            };\n        case \"add_column_to_left\":\n            const leftIndex = state.columns.findIndex(\n                (column) => column.id === action.columnId\n            );\n            let leftId = shortId();\n            return {\n                ...state,\n                skipReset: true,\n                columns: [\n                    ...state.columns.slice(0, leftIndex),\n                    {\n                        id: leftId,\n                        label: \"Column\",\n                        accessor: leftId,\n                        dataType: \"text\",\n                        created: action.focus && true,\n                        options: [],\n                    },\n                    ...state.columns.slice(leftIndex, state.columns.length),\n                ],\n            };\n        case \"add_column_to_right\":\n            const rightIndex = state.columns.findIndex(\n                (column) => column.id === action.columnId\n            );\n            const rightId = shortId();\n            return {\n                ...state,\n                skipReset: true,\n                columns: [\n                    ...state.columns.slice(0, rightIndex + 1),\n                    {\n                        id: rightId,\n                        label: \"Column\",\n                        accessor: rightId,\n                        dataType: \"text\",\n                        created: action.focus && true,\n                        options: [],\n                    },\n                    ...state.columns.slice(rightIndex + 1, state.columns.length),\n                ],\n            };\n        case \"delete_column\":\n            const deleteIndex = state.columns.findIndex(\n                (column) => column.id === action.columnId\n            );\n            return {\n                ...state,\n                skipReset: true,\n                columns: [\n                    ...state.columns.slice(0, deleteIndex),\n                    ...state.columns.slice(deleteIndex + 1, state.columns.length),\n                ],\n            };\n        case \"enable_reset\":\n            return {\n                ...state,\n                skipReset: false,\n            };\n        default:\n            return state;\n    }\n}\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, {\n        data: [\n            {\n                userID: \"e3e3\",\n                name: \"e3e3e\",\n                lastName: \"3e3e\",\n                email: \"\",\n                age: 1,\n                music: \"\",\n            },\n        ],\n        columns: [\n            {\n                id: \"name\",\n                label: \"Name\",\n                accessor: \"name\",\n                minWidth: 100,\n                dataType: \"text\",\n                options: [],\n            },\n            {\n                id: \"lastName\",\n                label: \"Last Name\",\n                accessor: \"lastName\",\n                minWidth: 100,\n                dataType: \"text\",\n                options: [],\n            },\n            {\n                id: \"age\",\n                label: \"Age\",\n                accessor: \"age\",\n                width: 80,\n                dataType: \"number\",\n                options: [],\n            },\n            {\n                id: \"email\",\n                label: \"E-Mail\",\n                accessor: \"email\",\n                width: 300,\n                dataType: \"text\",\n                options: [],\n            },\n            {\n                id: \"music\",\n                label: \"Music Preference\",\n                accessor: \"music\",\n                dataType: \"select\",\n                width: 200,\n                options: [],\n            },\n            {\n                id: 999999,\n                width: 20,\n                label: \"+\",\n                disableResizing: true,\n                dataType: \"null\",\n            },\n        ],\n    });\n\n    useEffect(() => {\n        dispatch({ type: \"enable_reset\" });\n        console.log(state);\n    }, [state.data, state.columns]);\n\n    return (\n        <div\n            style={{\n                width: \"100vw\",\n                height: \"100vh\",\n                overflowX: \"hidden\",\n            }}\n        >\n            <div\n                style={{\n                    height: 120,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                }}\n            ></div>\n            <div style={{ overflow: \"auto\", display: \"flex\" }}>\n                <div\n                    style={{\n                        flex: \"1 1 auto\",\n                        padding: \"1rem\",\n                        maxWidth: 1000,\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                    }}\n                >\n                    <Table\n                        columns={state.columns}\n                        data={state.data}\n                        dispatch={dispatch}\n                        skipReset={state.skipReset}\n                    />\n                </div>\n            </div>\n            <div\n                style={{\n                    height: 140,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                }}\n            ></div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/bodhaanshravipati/clr-project/my-app/src/app/admin/utils.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/UserButton.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/page.js",["183"],[],"\"use client\"\n\nimport { useAtom } from 'jotai'\n\nimport buildingIcon from '../../../../public/building.png'\nimport contractIcon from '../../../../public/contract.png'\nimport diplomaIcon from '../../../../public/diploma.png'\nimport editIcon from '../../../../public/editIcon.png'\nimport linkedInIcon from '../../../../public/linkedin.png'\nimport resumeIcon from '../../../../public/resume.png'\nimport transcriptIcon from '../../../../public/school.png'\n\nimport ColumnBox from './ColumnBox'\nimport RowBox from './RowBox'\n\nimport UserSettings from '@/app/components/UserButton'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport { useEffect, useState } from \"react\"\nimport { writeUserData } from \"../../firebase\"\nimport DescriptionBox from './DescriptionBox'\nimport DialogField from './DialogField'\nimport EducationExperiences from './EducationExperiences'\nimport LeadershipExperiences from './LeadershipExperiences'\nimport UploadButton from './UploadButton'\nimport WorkExperiences from './WorkExperiences'\n\nimport { getDownloadURL, getStorage, ref as storageRef } from \"firebase/storage\"\nimport userData from './UserData'\n\nexport default function Page({ params }) {\n\n    const [userDataJSON, setUserDataJSON] = useAtom(userData);\n    const [resumeURL, setResumeURL] = useState(\"/\");\n\n    useEffect(() => {\n\n        const dbRef = ref(getDatabase());\n\n        get(child(dbRef, `/users/${params.userID}`))\n            .then((snapshot) => {\n                if (snapshot.exists()) {\n                    console.log(\"Snapshot: \", snapshot.val());\n                    setUserDataJSON(snapshot.val());\n                } else {\n                    writeUserData(params.userID, {\n                        \"user\": \"\",\n                        \"university\": \"\",\n                        \"email\": \"\",\n                        \"city\": \"\",\n                        \"degree\": \"\",\n                        \"resumeLink\": \"/\",\n                        \"diplomaLink\": \"/\",\n                        \"transcriptLink\": \"/\",\n                        \"linkedInLink\": \"/\",\n                        \"educationalExperiences\": {\n                            \"experiences\": [\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                }\n                            ],\n                            \"description\": \"\"\n                        },\n                        \"workExperiences\": {\n                            \"experiences\": [\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                }\n                            ],\n                            \"description\": \"\"\n                        },\n                        \"leadershipExperiences\": {\n                            \"experiences\": [\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                }\n                            ],\n                            \"description\": \"\"\n                        },\n                        \"achievements\": {\n                            \"education\": [\n                                {\n                                    \"name\": \"\",\n                                    \"data\": [{\n                                        \"name\": \"\",\n                                        \"color\": \"\"\n                                    }]\n                                }\n                            ],\n                            \"professional\": [\n                                {\n                                    \"name\": \"\",\n                                    \"data\": [{\n                                        \"name\": \"\",\n                                        \"color\": \"\"\n                                    }]\n                                }\n                            ],\n                            \"leadership\": [\n                                {\n                                    \"name\": \"\",\n                                    \"data\": [{\n                                        \"name\": \"\",\n                                        \"color\": \"\"\n                                    }]\n                                }\n                            ]\n                        },\n                        \"artifactHub\": [\n                            {\n                                \"id\": \"\",\n                                \"name\": \"e3e3e\",\n                                \"description\": \"\",\n                                \"imageLink\": \"\"\n                            }\n                        ]\n                    });\n                    setUserDataJSON({\n                        \"user\": \"\",\n                        \"university\": \"\",\n                        \"email\": \"\",\n                        \"city\": \"\",\n                        \"degree\": \"\",\n                        \"resumeLink\": \"/\",\n                        \"diplomaLink\": \"/\",\n                        \"transcriptLink\": \"/\",\n                        \"linkedInLink\": \"/\",\n                        \"educationalExperiences\": {\n                            \"experiences\": [\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                }\n                            ],\n                            \"description\": \"\"\n                        },\n                        \"workExperiences\": {\n                            \"experiences\": [\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                }\n                            ],\n                            \"description\": \"\"\n                        },\n                        \"leadershipExperiences\": {\n                            \"experiences\": [\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                },\n                                {\n                                    \"title\": \"\",\n                                    \"subtext\": \"\",\n                                    \"textSection\": \"\",\n                                    \"description\": \"\"\n                                }\n                            ],\n                            \"description\": \"\"\n                        },\n                        \"achievements\": {\n                            \"education\": [\n                                {\n                                    \"name\": \"\",\n                                    \"data\": [{\n                                        \"name\": \"\",\n                                        \"color\": \"\"\n                                    }]\n                                }\n                            ],\n                            \"professional\": [\n                                {\n                                    \"name\": \"\",\n                                    \"data\": [{\n                                        \"name\": \"\",\n                                        \"color\": \"\"\n                                    }]\n                                }\n                            ],\n                            \"leadership\": [\n                                {\n                                    \"name\": \"\",\n                                    \"data\": [{\n                                        \"name\": \"\",\n                                        \"color\": \"\"\n                                    }]\n                                }\n                            ]\n                        },\n                        \"artifactHub\": [\n                            {\n                                \"id\": \"\",\n                                \"name\": \"e3e3e\",\n                                \"description\": \"\",\n                                \"imageLink\": \"\"\n                            }\n                        ]\n                    });\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n\n        getDownloadURL(storageRef(getStorage(), `resumes/${params.userID}`))\n            .then((url) => {\n                setResumeURL(url);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        return;\n    }, []);\n\n    return (\n        <>\n            <UploadButton path={`resumes/${params.userID}`} state={setResumeURL}></UploadButton>\n            <div id=\"edits-container\">\n                <DialogField experience=\"educationalExperience\" userID={params.userID}>eee</DialogField>\n                <DialogField experience=\"professionalExperience\" userID={params.userID}>eee</DialogField>\n                <DialogField experience=\"leadershipExperience\" userID={params.userID}>eee</DialogField>\n            </div>\n\n            <div id=\"column-container\">\n                <div id=\"profile-container\">\n                    <div id=\"profile-picture\">\n                        <UserSettings></UserSettings>\n                    </div>\n                    <div id=\"profile-info-container\">\n                        <p>{userDataJSON.user}</p>\n                        <p>{userDataJSON.university}</p>\n                        <p>{userDataJSON.email}</p>\n                        <p>{userDataJSON.city}</p>\n                    </div>\n                </div>\n                <ColumnBox name=\"Educational Experience\" icon={editIcon} link={`/users/${params.userID}/educationExperience`}></ColumnBox>\n                <ColumnBox name=\"Professional Experience\" icon={buildingIcon} link={`/users/${params.userID}/workExperience`}></ColumnBox>\n                <ColumnBox name=\"Leadership, Involvement\" icon={contractIcon} link={`/users/${params.userID}/leadershipExperience`}></ColumnBox>\n            </div>\n            <div id=\"row-container\">\n                <RowBox name=\"Resume\" icon={resumeIcon} link={resumeURL}></RowBox>\n                <RowBox name=\"Artifact Hub\" icon={editIcon} link={`/users/${params.userID}/artifactHub`}></RowBox>\n                <RowBox name=\"Diploma\" icon={diplomaIcon} link={userDataJSON.diplomaLink}></RowBox>\n                <RowBox name=\"Transcript\" icon={transcriptIcon} link={userDataJSON.transcriptLink}></RowBox>\n                <RowBox name=\"LinkedIn\" icon={linkedInIcon} link={userDataJSON.linkedInLink}></RowBox>\n            </div>\n\n            <div id=\"experiences-container\">\n                <EducationExperiences></EducationExperiences>\n                <WorkExperiences></WorkExperiences>\n                <LeadershipExperiences></LeadershipExperiences>\n            </div>\n\n            <div id=\"description-container\">\n                <DescriptionBox experience=\"educationalExperience\"></DescriptionBox>\n                <DescriptionBox experience=\"professionalExperience\"></DescriptionBox>\n                <DescriptionBox experience=\"leadershipExperience\"></DescriptionBox>\n            </div>\n        </>\n    )\n}\n","/Users/bodhaanshravipati/clr-project/my-app/src/middleware.ts",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/SignInPage.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/UserData.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/ColumnBox.js",["184"],[],"import Image from 'next/image'\nimport Link from 'next/link'\n\nexport default function ColumnBox(props) {\n  return (\n    <div id=\"column-box\">\n    <Image src={props.icon} width={100} style={{ height: \"60%\", marginTop: \"1vh\", marginLeft: \"10px\"}}></Image>\n    <h2 id=\"column-header\">{props.name}</h2>\n    <Link href={props.link}>\n        <div id=\"column-link\">\n            <p>Learn More</p>\n        </div>\n    </Link>\n</div>\n  )\n}\n","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/DescriptionBox.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/EducationExperiences.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/LeadershipExperiences.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/Profile.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/RowBox.js",["185"],[],"import Image from 'next/image'\nimport Link from 'next/link'\n\nexport default function RowBox(props) {\n    return (\n        <Link href={props.link}>\n            <div id=\"row-box\">\n                <Image src={props.icon} width={40} style={{ height: \"60%\", marginTop: \"1vh\", marginLeft: \"10px\" }}></Image>\n                <h2 id=\"row-header\">{props.name}</h2>\n            </div>\n        </Link>\n    )\n}\n","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/WorkExperiences.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/educationExperience/page.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/leadershipExperience/page.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/workExperience/page.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/DialogField.js",["186"],[],"import { writeUserDataJSON } from \"@/app/firebase\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport TextField from \"@mui/material/TextField\";\nimport { useAtom } from \"jotai\";\nimport { useRouter } from \"next/navigation\";\nimport * as React from \"react\";\nimport userData from './UserData'\n\nexport default function DialogField(props) {\n    const [open, setOpen] = React.useState(false);\n    const [data, setData] = React.useState(\"\");\n\n    const [userDataJSON, setUserDataJSON] = useAtom(userData);\n\n    const { push } = useRouter();\n\n    const [titleA, setTitleA] = React.useState(\"\");\n    const [titleB, setTitleB] = React.useState(\"\");\n    const [titleC, setTitleC] = React.useState(\"\");\n\n    const [subtextA, setSubtextA] = React.useState(\"\");\n    const [subtextB, setSubtextB] = React.useState(\"\");\n    const [subtextC, setSubtextC] = React.useState(\"\");\n\n    const [textSectionA, setTextSectionA] = React.useState(\"\");\n    const [textSectionB, setTextSectionB] = React.useState(\"\");\n    const [textSectionC, setTextSectionC] = React.useState(\"\");\n\n    const [description, setDescription] = React.useState(\"\");\n\n    let experiencesJSON = {};\n\n    let link = \"\";\n\n    const getExperiencesJSON = () => {\n        switch (props.experience) {\n            case \"educationalExperience\":\n                link = `/users/${props.userID}/educationalExperiences`;\n                experiencesJSON = userDataJSON.educationalExperiences;\n                console.log(experiencesJSON);\n                break;\n            case \"professionalExperience\":\n                link = `/users/${props.userID}/workExperiences`;\n                experiencesJSON = userDataJSON.workExperiences;\n                break;\n            case \"leadershipExperience\":\n                link = `/users/${props.userID}/leadershipExperiences`;\n                experiencesJSON = userDataJSON.leadershipExperiences;\n                break;\n        }\n    }\n\n    getExperiencesJSON();\n\n\n    React.useEffect(() => {\n\n        console.log(\"Experiences in UseEffect: \", experiencesJSON);\n        // try {\n        setTitleA(experiencesJSON.experiences[0].title);\n        setTitleB(experiencesJSON.experiences[1].title);\n        setTitleC(experiencesJSON.experiences[2].title);\n\n        setSubtextA(experiencesJSON.experiences[0].subtext);\n        setSubtextB(experiencesJSON.experiences[1].subtext);\n        setSubtextC(experiencesJSON.experiences[2].subtext);\n\n        setTextSectionA(experiencesJSON.experiences[0].textSection);\n        setTextSectionB(experiencesJSON.experiences[1].textSection);\n        setTextSectionC(experiencesJSON.experiences[2].textSection);\n\n        setDescription(experiencesJSON.description);\n        // }\n        // catch (e) {\n        //     console.log(\"Error Loading Experiences: \", experiencesJSON)\n        // }\n\n        return;\n    }, [experiencesJSON]);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = () => {\n        setOpen(false);\n        writeUserDataJSON(link, {\n            experiences: [\n                {\n                    title: titleA,\n                    subtext: subtextA,\n                    textSection: textSectionA,\n                    description: \"\",\n                },\n                {\n                    title: titleB,\n                    subtext: subtextB,\n                    textSection: textSectionB,\n                    description: \"\",\n                },\n                {\n                    title: titleC,\n                    subtext: subtextC,\n                    textSection: textSectionC,\n                    description: \"\",\n                },\n            ],\n            description: description,\n        }).then(() => {\n            push('/');\n        })\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" onClick={handleClickOpen} sx={{\n                fontFamily: 'Right Serif',\n                fontWeight: \"bold\",\n                fontStyle: \"italic\",\n                color: \"#6298FE\",\n                borderRadius: \"1vw\",\n                borderColor: \"\",\n            }}>\n                Edit\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle sx={{backgroundColor: \"#c27e00\", color: \"white\"}}>Edit Your Experiences Data</DialogTitle>\n                <DialogContent sx={{backgroundColor: \"white\", overflowY: \"hidden\", color: \"white\"}}>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"First Title\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={titleA}\n                        onChange={(e) => {\n                            setTitleA(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"First Subtext\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={subtextA}\n                        onChange={(e) => {\n                            setSubtextA(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"First Text Section\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={textSectionA}\n                        onChange={(e) => {\n                            setTextSectionA(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Second Title\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={titleB}\n                        onChange={(e) => {\n                            setTitleB(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Second Subtext\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={subtextB}\n                        onChange={(e) => {\n                            setSubtextB(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Second Text Section\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={textSectionB}\n                        onChange={(e) => {\n                            setTextSectionB(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Third Title\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={titleC}\n                        onChange={(e) => {\n                            setTitleC(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Third Subtext\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={subtextC}\n                        onChange={(e) => {\n                            setSubtextC(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Third Text Section\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={textSectionC}\n                        onChange={(e) => {\n                            setTextSectionC(e.target.value);\n                        }}\n                    />\n                                        <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Description\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={description}\n                        onChange={(e) => {\n                            setDescription(e.target.value);\n                        }}\n                    />\n                </DialogContent>\n                <DialogActions sx={{backgroundColor: \"white\"}}>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleSubmit}>Submit</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/UploadButton.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/GridTable.js",["187","188","189","190","191","192","193"],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/users/[userID]/artifactHub/page.js",[],[],{"ruleId":"194","severity":1,"message":"195","line":283,"column":8,"nodeType":"196","endLine":283,"endColumn":35,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":294,"column":8,"nodeType":"196","endLine":294,"endColumn":10,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":5,"nodeType":"202","endLine":7,"endColumn":104},{"ruleId":"200","severity":1,"message":"201","line":8,"column":17,"nodeType":"202","endLine":8,"endColumn":116},{"ruleId":"194","severity":1,"message":"203","line":35,"column":9,"nodeType":"204","endLine":35,"endColumn":29},{"ruleId":"194","severity":1,"message":"205","line":76,"column":6,"nodeType":"196","endLine":76,"endColumn":8,"suggestions":"206"},{"ruleId":"194","severity":1,"message":"207","line":84,"column":6,"nodeType":"196","endLine":84,"endColumn":12,"suggestions":"208"},{"ruleId":"209","severity":2,"message":"210","line":191,"column":35,"nodeType":"211","endLine":191,"endColumn":49},{"ruleId":"209","severity":2,"message":"210","line":192,"column":43,"nodeType":"211","endLine":192,"endColumn":57},{"ruleId":"209","severity":2,"message":"212","line":196,"column":9,"nodeType":"211","endLine":196,"endColumn":24},{"ruleId":"194","severity":1,"message":"213","line":220,"column":12,"nodeType":"196","endLine":220,"endColumn":25,"suggestions":"214"},{"ruleId":"215","severity":2,"message":"216","line":223,"column":11,"nodeType":"217","messageId":"218","endLine":225,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["219"],"React Hook useEffect has missing dependencies: 'params.userID' and 'setUserDataJSON'. Either include them or remove the dependency array.",["220"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","The 'experiencesJSON' object makes the dependencies of useEffect Hook (at line 83) change on every render. To fix this, wrap the initialization of 'experiencesJSON' in its own useMemo() Hook.","VariableDeclarator","React Hook React.useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["221"],"React Hook React.useLayoutEffect has missing dependencies: 'isUsed' and 'userID'. Either include them or remove the dependency array.",["222"],"react-hooks/rules-of-hooks","React Hook \"React.useState\" is called in function \"getActions\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","MemberExpression","React Hook \"React.useEffect\" is called in function \"getActions\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook React.useEffect has missing dependencies: 'id' and 'path'. Either include them or remove the dependency array. Outer scope values like 'rows' aren't valid dependencies because mutating them doesn't re-render the component.",["223"],"react/jsx-key","Missing \"key\" prop for element in array","JSXElement","missingArrayKey",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [state.data, state.columns, state]",{"range":"234","text":"235"},"Update the dependencies array to be: [params.userID, setUserDataJSON]",{"range":"236","text":"237"},"Update the dependencies array to be: [userID]",{"range":"238","text":"239"},"Update the dependencies array to be: [isUsed, rows, userID]",{"range":"240","text":"241"},"Update the dependencies array to be: [id, image, path]",{"range":"242","text":"243"},[10461,10488],"[state.data, state.columns, state]",[12139,12141],"[params.userID, setUserDataJSON]",[2307,2309],"[userID]",[2450,2456],"[isUsed, rows, userID]",[6212,6225],"[id, image, path]"]