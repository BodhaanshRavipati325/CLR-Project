[{"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/GridData.js":"1","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Item.js":"2","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/ItemData.js":"3","/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Titles.js":"4","/Users/bodhaanshravipati/clr-project/my-app/src/app/layout.js":"5","/Users/bodhaanshravipati/clr-project/my-app/src/app/page.js":"6","/Users/bodhaanshravipati/clr-project/my-app/src/app/[userID]/page.js":"7","/Users/bodhaanshravipati/clr-project/my-app/src/app/firebase.js":"8"},{"size":2066,"mtime":1690731819780,"results":"9","hashOfConfig":"10"},{"size":243,"mtime":1690661608433,"results":"11","hashOfConfig":"10"},{"size":696,"mtime":1690676042443,"results":"12","hashOfConfig":"10"},{"size":2584,"mtime":1690730558959,"results":"13","hashOfConfig":"10"},{"size":369,"mtime":1690658994863,"results":"14","hashOfConfig":"10"},{"size":1537,"mtime":1690681767838,"results":"15","hashOfConfig":"10"},{"size":3633,"mtime":1690732747279,"results":"16","hashOfConfig":"10"},{"size":1425,"mtime":1690731560286,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m0x51d",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/GridData.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Item.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/ItemData.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/components/Titles.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/layout.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/page.js",[],[],"/Users/bodhaanshravipati/clr-project/my-app/src/app/[userID]/page.js",["43"],[],"\"use client\";\n\nimport { Button } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { TypeAnimation } from \"react-type-animation\";\n\nimport GridData from \"../components/GridData\";\n\nimport data from \"/Users/bodhaanshravipati/clr-project/my-app/public/test.json\";\nimport test from \"/Users/bodhaanshravipati/clr-project/my-app/public/testA.json\";\n\nimport { readUserData, writeUserData } from \"../firebase\";\n\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nexport default function Page({ params }) {\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    const [userDataJSON, setUserDataJSON] = useState(data);\n\n    today =\n        mm +\n        \"/\" +\n        dd +\n        \"/\" +\n        yyyy +\n        \" at \" +\n        today.getHours() +\n        \":\" +\n        today.getMinutes();\n\n    useEffect(() => {\n            writeUserData(params.userID, test).then(() => {\n                return readUserData(params.userID);\n            }\n            ).then((response) => {\n                setUserDataJSON(response);\n            })\n\n        console.log(userDataJSON);\n        return;\n    }, []);\n\n    return (\n        <>\n            {/* <img id=\"bitcoin-logo\" src={bitcoinLogo}></img>\n      <img id=\"ethereum-logo\" src={ethereumLogo}></img>\n      <img id=\"bnb-logo\" src={bnbLogo}></img>\n      <img id=\"usdc-logo\" src={usdcLogo}></img> */}\n\n            <h4 id=\"update-text\">UPDATED {today}</h4>\n\n            <TypeAnimation\n                sequence={[\n                    // Same substring at the start will only be typed out once, initially\n                    \"Keep Your Crypto Safe\",\n                    1000,\n                ]}\n                wrapper=\"span\"\n                speed={50}\n                style={{\n                    position: \"absolute\",\n                    color: \"gold\",\n                    fontFamily: \"Air\",\n                    fontWeight: \"bold\",\n                    fontStyle: \"normal\",\n                    fontSize: \"4vw\",\n                    width: \"100%\",\n                    textAlign: \"center\",\n                    marginTop: \"10vh\",\n                }}\n                repeat={Infinity}\n            ></TypeAnimation>\n\n            <h5 id=\"title-text\">\n                Make sure that your crypto exchanges are safe and capable of\n                withstanding market fluctuations. With the collapse of FTX indicating\n                severe market insecurity, customers must actively ensure the safety of\n                their investments.\n            </h5>\n\n            <Button\n                sx={{\n                    color: \"white\",\n                    fontFamily: \"Air\",\n                    border: 1,\n                    borderRadius: 2,\n                    position: \"absolute\",\n                    marginTop: \"29.5vh\",\n                    marginLeft: \"43vw\",\n                }}\n            >\n                Learn More\n            </Button>\n\n            <a href=\"https://www.coinglass.com/\">\n                <Button\n                    sx={{\n                        color: \"white\",\n                        fontFamily: \"Air\",\n                        border: 1,\n                        borderRadius: 2,\n                        position: \"absolute\",\n                        marginTop: \"29.5vh\",\n                        marginLeft: \"50vw\",\n                    }}\n                >\n                    Data\n                </Button>\n            </a>\n\n            <GridData userData={userDataJSON}></GridData>\n        </>\n    );\n}\n","/Users/bodhaanshravipati/clr-project/my-app/src/app/firebase.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":46,"column":8,"nodeType":"46","endLine":46,"endColumn":10,"suggestions":"47"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.userID' and 'userDataJSON'. Either include them or remove the dependency array.","ArrayExpression",["48"],{"desc":"49","fix":"50"},"Update the dependencies array to be: [params.userID, userDataJSON]",{"range":"51","text":"52"},[1267,1269],"[params.userID, userDataJSON]"]